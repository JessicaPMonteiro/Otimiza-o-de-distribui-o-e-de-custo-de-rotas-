# -*- coding: utf-8 -*-
"""Analise_otimizacao.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PPaNaHfGPW14DoXWzIlVt_X4ZL-zSUAH
"""

#Importando as bibliotecas
import pandas as pd #data manipulation
import matplotlib.pyplot as plt #plotting library

#Habilitando a abertura de dados que estão no Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Abrir Tabela demandas atualizada
Otimizacao = pd.read_csv('/content/drive/My Drive/Dados_API/Otimizacao.csv')

print(Otimizacao)

#Calculando o resultado da otimização através dos custos por fábrica

import pandas as pd
import matplotlib.pyplot as plt


# Agrupando os dados por 'CO.Fabrica' e somando os custos
custo_por_fabrica = Otimizacao.groupby('CO.Fabrica').agg({
    'Custo_rota': 'sum',
    'Custo_Rota_otim': 'sum'
}).reset_index()

# Verificando o resultado do agrupamento
print(custo_por_fabrica)

# Supondo que temos exatamente 3 fábricas
fabrica_1 = custo_por_fabrica.iloc[0]
fabrica_2 = custo_por_fabrica.iloc[1]
fabrica_3 = custo_por_fabrica.iloc[2]

# Criando um DataFrame para facilitar o plot
dados_comparacao = pd.DataFrame({
    'Fábrica': ['Fábrica 1', 'Fábrica 2', 'Fábrica 3'],
    'Custo Rota': [fabrica_1['Custo_rota'], fabrica_2['Custo_rota'], fabrica_3['Custo_rota']],
    'Custo Rota Otimizado': [fabrica_1['Custo_Rota_otim'], fabrica_2['Custo_Rota_otim'], fabrica_3['Custo_Rota_otim']]
})

# Criando o gráfico
fig, ax = plt.subplots(figsize=(12, 6))

# Índice para as barras
indices = range(len(dados_comparacao))

# Largura das barras
largura = 0.35

# Plotando os custos por fábrica
barras1 = ax.bar(indices, dados_comparacao['Custo Rota'], width=largura, label='Custo Rota')
barras2 = ax.bar([i + largura for i in indices], dados_comparacao['Custo Rota Otimizado'], width=largura, label='Custo Rota Otimizado')

# Adicionando título e rótulos aos eixos
ax.set_title('Comparação de Custos Totais por Fábrica')
ax.set_xlabel('Fábrica')
ax.set_ylabel('Custo Total')
ax.set_xticks([i + largura / 2 for i in indices])
ax.set_xticklabels(dados_comparacao['Fábrica'])

# Adicionando uma legenda
ax.legend()

# Adicionando rótulos de valor nas barras
def adicionar_rotulos(barras):
    for barra in barras:
        altura = barra.get_height()
        ax.annotate(f'{altura:.2f}',
                    xy=(barra.get_x() + barra.get_width() / 2, altura),
                    xytext=(0, 3),  # 3 points vertical offset
                    textcoords='offset points',
                    ha='center', va='bottom')

adicionar_rotulos(barras1)
adicionar_rotulos(barras2)

# Exibindo o gráfico
plt.show()

